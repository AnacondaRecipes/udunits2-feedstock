From a703ec6225ae734eda76291965159025132e2359 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Thu, 10 Aug 2017 20:40:55 -0500
Subject: [PATCH 2/2] Use the shared library to locate the default xml

---
 configure.ac    |  2 ++
 lib/xml.c       | 55 ++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 prog/udunits2.c |  7 ++++++-
 3 files changed, 62 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 5f718bd..4947a7b 100644
--- a/configure.ac
+++ b/configure.ac
@@ -100,6 +100,8 @@ AC_SEARCH_LIBS([log10], [m], ,
 AC_SEARCH_LIBS([XML_StopParser], [expat], , 
     AC_MSG_ERROR([cannot find EXPAT function XML_StopParser]))
 
+AC_CHECK_LIB([dl], [dlopen])
+
 # Checks for header files.
 AC_HEADER_STDC
 AC_CHECK_HEADERS([float.h inttypes.h stddef.h stdlib.h string.h strings.h])
diff --git a/lib/xml.c b/lib/xml.c
index 997f6f8..a6a835b 100644
--- a/lib/xml.c
+++ b/lib/xml.c
@@ -18,6 +18,12 @@
 #   define _XOPEN_SOURCE 500
 #endif
 
+#if defined(__linux__)
+#   ifndef _GNU_SOURCE
+#       define _GNU_SOURCE
+#   endif
+#endif
+
 #include <assert.h>
 #include <errno.h>
 #include <fcntl.h>
@@ -34,6 +40,14 @@
 #endif
 #include <sys/stat.h>
 #include <sys/types.h>
+#if defined(__linux__)
+#include <dlfcn.h>
+#elif defined(__APPLE__)
+#define _DARWIN_C_SOURCE
+#include <dlfcn.h>
+#elif defined _WIN32
+#include <windows.h>
+#endif
 
 #ifndef DLL_UDUNITS2
 #define XML_STATIC
@@ -2116,6 +2130,45 @@ readXml(
 }
 
 
+/* A bit hacky but much better than modifying binaries. */
+const char*
+default_udunits2_xml_path()
+{
+    char const * soname = 0;
+#if defined(__APPLE__) || defined(__linux__)
+    #define END_BIT "/share/udunits/udunits2.xml"
+    #define SEP '/'
+    Dl_info info;
+    if (dladdr(default_udunits2_xml_path, &info)) {
+        soname = info.dli_fname;
+    }
+#elif defined(_WIN32)
+    #define END_BIT "\\share\\udunits\\udunits2.xml"
+    #define SEP '\\'
+    // NB: XP+ solution!
+    HMODULE hModule = NULL;
+    GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS, (LPCTSTR)default_udunits2_xml_path, &hModule);
+    char tmpbuf[MAX_PATH];
+    GetModuleFileName(hModule, &tmpbuf[0], MAX_PATH);
+    soname = &tmpbuf[0];
+#endif
+    if (soname) {
+        char * result = malloc(strlen(soname) + strlen(END_BIT) + 1);
+        if (result) {
+            strcpy(result, soname);
+            if (strrchr(result, SEP)) {
+                *strrchr(result, SEP) = '\0';
+                if (strrchr(result, SEP)) {
+                    *strrchr(result, SEP) = '\0';
+                }
+            }
+            strcat(result, END_BIT);
+            return result;
+        }
+    }
+    return DEFAULT_UDUNITS2_XML_PATH;
+}
+
 /**
  * Returns the pathname of the XML database.
  *
@@ -2142,7 +2195,7 @@ ut_get_path_xml(
         	*status = UT_OPEN_ENV;
     	}
     	else {
-          	path = DEFAULT_UDUNITS2_XML_PATH;
+          	path = default_udunits2_xml_path();
         	*status = UT_OPEN_DEFAULT;
     	}
     }
diff --git a/prog/udunits2.c b/prog/udunits2.c
index 63402b5..c179c33 100644
--- a/prog/udunits2.c
+++ b/prog/udunits2.c
@@ -61,10 +61,14 @@ static int		_wantDefinition; /* "have" unit definition desired? */
 static int		_formattingOptions = UT_DEFINITION;
 static int		_exitStatus = EXIT_FAILURE;
 
+extern const char*
+default_udunits2_xml_path();
 
 static void
 usage(void)
 {
+    const char * default_xml = default_udunits2_xml_path();
+
     (void)fprintf(stderr,
 "Usage:\n"
 "    %s -h\n"
@@ -80,7 +84,8 @@ usage(void)
 "    -W want    Use \"want\" unit for conversion. Empty string requests\n"
 "               definition of \"have\" unit. Default is reply to prompt.\n"
 "    XML_file   XML database file. Default is \"%s\".\n",
-        _progname, _progname, DEFAULT_UDUNITS2_XML_PATH);
+        _progname, _progname, default_xml);
+    free(default_xml);
 }
 
 /**
-- 
2.14.1

